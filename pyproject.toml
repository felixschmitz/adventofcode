# ======================================================================================
# Project metadata
# ======================================================================================

[project]
name = "py_adventofcode"
description = "Advent of Code solutions."
requires-python = ">=3.11"
dependencies = [
    "pytask",
]
dynamic = ["version"]
classifiers = [
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: MacOS :: MacOS X",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
]
authors = [
    { name = "Felix Schmitz", email = "s87fschm@uni-bonn.de" },
]
maintainers = [
    { name = "Felix Schmitz", email = "s87fschm@uni-bonn.de" },
]

[project.readme]
file = "README.md"
content-type = "text/markdown"

[project.license]
file = "LICENSE"

[project.urls]
Repository = "https://github.com/felixschmitz/adventofcode"
Github = "https://github.com/felixschmitz/adventofcode"
Tracker = "https://github.com/felixschmitz/adventofcode/issues"


# ======================================================================================
# Build system configuration
# ======================================================================================

[build-system]
requires = ["hatchling", "hatch_vcs"]
build-backend = "hatchling.build"

[tool.hatch.build.hooks.vcs]
version-file = "src/py_adventofcode/_version.py"

[tool.hatch.build.targets.sdist]
exclude = ["tests"]
only-packages = true

[tool.hatch.build.targets.wheel]
only-include = ["src"]
sources = ["src"]

[tool.hatch.version]
source = "vcs"

[tool.hatch.metadata]
allow-direct-references = true


# ======================================================================================
# Pixi
# ======================================================================================

[tool.pixi.project]
channels = ["conda-forge"]
platforms = ["linux-64", "osx-64", "osx-arm64", "win-64"]

# Development Dependencies (conda)
# --------------------------------------------------------------------------------------

[tool.pixi.dependencies]
python = "3.11"
pre-commit = ">=4.0.1,<5"
pygraphviz = "*"
pytask-latex = ">=0.4.0"
pytask-parallel = ">=0.4.0"
pytask = ">=0.5.2,<0.6"
pandas = ">=2.2.3,<3"

# Development Dependencies (pypi)
# --------------------------------------------------------------------------------------

[tool.pixi.pypi-dependencies]
py_adventofcode = {path = ".", editable = true}
kaleido = "*"
pdbp = "*"

[tool.pixi.target.win-64.pypi-dependencies]
kaleido = ">=0.1.0.post1,<=0.1.0.post1"

# Features and Tasks
# --------------------------------------------------------------------------------------

[tool.pixi.feature.test.dependencies]
pytest = "*"
pytest-cov = "*"
pytest-xdist = "*"

[tool.pixi.feature.test.tasks]
tests = "pytest tests"
tests-with-cov = "pytest tests --cov-report=xml --cov=./"

# Environments
# --------------------------------------------------------------------------------------

[tool.pixi.environments]
test = {features = ["test"], solve-group = "default"}


# ======================================================================================
# Ruff configuration
# ======================================================================================

[tool.ruff]
target-version = "py311"
lint.select = ["ALL"]
lint.extend-ignore = [
    "S101", # Use of `assert` detected.
    "ANN",  # Missing type annotations
    # Avoid conflict with ruff-format
    "COM812",
    "ISC001",
]
fix = true


[tool.ruff.lint.per-file-ignores]
"tests/*" = ["D", "PD011"]
"**/config.py" = ["FBT003"] # modern pandas settings

[tool.ruff.lint.pydocstyle]
convention = "google"


# ======================================================================================
# pytask configuration
# ======================================================================================

[tool.pytask.ini_options]
paths = ["./src/py_adventofcode"]
pdbcls = "pdbp:Pdb"
editor_url_scheme = "vscode"
task_files = ["day*.py", "task.py", "tasks.py"]


# ======================================================================================
# pytest configuration
# ======================================================================================

[tool.pytest.ini_options]
addopts = "--pdbcls=pdbp:Pdb"
filterwarnings = []
markers = [
    "wip: Tests that are work-in-progress.",
    "unit: Flag for unit tests which target mainly a single function.",
    "integration: Flag for integration tests which may comprise of multiple unit tests.",
    "end_to_end: Flag for tests that cover the whole program.",
]
norecursedirs = ["docs"]


# ======================================================================================
# yamlfix configuration
# ======================================================================================

[tool.yamlfix]
line_length = 88
none_representation = "null"
